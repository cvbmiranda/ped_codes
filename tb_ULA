library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tb_ula is
end tb_ula;

architecture sim of tb_ula is
    -- Sinais para conectar ao DUT (Device Under Test)
    signal clk       : STD_LOGIC := '0';
    signal rst       : STD_LOGIC := '0';
    signal A         : STD_LOGIC := '0';
    signal B         : STD_LOGIC := '0';
    signal SEL       : STD_LOGIC := '0';
    
    signal c_out     : STD_LOGIC;
    signal over      : STD_LOGIC;
    signal oper      : STD_LOGIC_VECTOR(1 downto 0);
    signal display   : STD_LOGIC_VECTOR(6 downto 0);
    signal anode     : STD_LOGIC_VECTOR(3 downto 0);

    -- Tempo de simulação
    constant clk_period : time := 20 ns;  -- Período do clock
begin

    -- Instância do DUT
    uut: entity work.ula
        port map (
            clk       => clk,
            rst       => rst,
            A         => A,
            B         => B,
            SEL       => SEL,
            c_out     => c_out,
            over      => over,
            oper      => oper,
            display   => display,
            anode     => anode
        );

    -- Geração do clock
    clk_process : process
    begin
        while true loop
            clk <= '0';
            wait for clk_period / 2;
            clk <= '1';
            wait for clk_period / 2;
        end loop;
    end process;

    -- Processo de estímulos
    stimulus_process: process
    begin
        -- Reset inicial
        rst <= '0';
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        rst <= '1';
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        
        -- Teste: Incrementar A
        A <= '1';  -- Pressiona o botão A
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        A <= '0';  -- Libera o botão A
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Teste: Incrementar B
        B <= '1';  -- Pressiona o botão B
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        B <= '0';  -- Libera o botão B
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Teste: Selecionar operação (Soma)
        SEL <= '1';  -- Pressiona o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        SEL <= '0';  -- Libera o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Teste: Selecionar operação (Subtração)
        SEL <= '1';  -- Pressiona o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        SEL <= '0';  -- Libera o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Teste: Selecionar operação (AND)
        SEL <= '1';  -- Pressiona o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        SEL <= '0';  -- Libera o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Teste: Selecionar operação (OR)
        SEL <= '1';  -- Pressiona o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock
        SEL <= '0';  -- Libera o botão SEL
        wait for 40 ns;  -- Aguarda 2 períodos de clock

        -- Finaliza a simulação
        wait;
    end process;

end sim;
