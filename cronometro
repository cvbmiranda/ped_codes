library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Cronometro is
    Port ( clk_1Hz : in  STD_LOGIC;  -- Clock de 1 Hz
           start   : in  STD_LOGIC;  -- Botão Start/Stop
           reset   : in  STD_LOGIC;  -- Botão Reset
           min     : out STD_LOGIC_VECTOR(3 downto 0); -- Minutos
           sec     : out STD_LOGIC_VECTOR(5 downto 0)); -- Segundos
end Cronometro;

architecture Behavioral of Cronometro is
    signal segundos : INTEGER range 0 to 59 := 0;
    signal minutos  : INTEGER range 0 to 9 := 0;
    signal rodando  : STD_LOGIC := '0';

begin
    process(clk_1Hz)
    begin
        if rising_edge(clk_1Hz) then
            if reset = '1' then
                segundos <= 0;
                minutos <= 0;
                rodando <= '0';
            elsif start = '1' then
                rodando <= NOT rodando; -- Alterna entre iniciar e parar
            end if;

            if rodando = '1' then
                if segundos = 59 then
                    segundos <= 0;
                    if minutos < 9 then
                        minutos <= minutos + 1;
                    end if;
                else
                    segundos <= segundos + 1;
                end if;
            end if;
        end if;
    end process;

    -- Conversão para saída
    sec <= CONV_STD_LOGIC_VECTOR(segundos, 6);
    min <= CONV_STD_LOGIC_VECTOR(minutos, 4);

end Behavioral;
